/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tp4.ex3;

import java.awt.*;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.swing.*;

class AireDeDessin extends JComponent {
    BufferedImage mon_image;
    Graphics2D graphic;
    Point origin;
    Point destination;
    int width;
    int height;

    
    public enum DrawStates {Start, Preview, Final};
    public DrawStates state;
    
    public enum DrawTypes {Ligne, Cercle, Rectangle};
    public DrawTypes type;
    
    public AireDeDessin() {
        type = DrawTypes.Ligne;
        state = DrawStates.Start;
        mon_image = null;
        origin = null;
    }

    public void originDraw(Point p) {
        state = DrawStates.Preview;
        origin = p;
    }

    public void previewDraw(Point p) {        
    	state = DrawStates.Final;
        destination = p;
        repaint();
    }

    public void finishDraw(){
        state = DrawStates.Start;
        repaint();
    }
    
    //on efface en dessinant un rectangle blanc
    public void efface(Point p) {
        graphic.setPaint(Color.white);
        graphic.fillRect(p.x, p.y, 10, 10);
    }
    
    //on efface tout
    public void nouveau(int w, int h) {
    	width = w;
    	height = h;
    	
        mon_image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        graphic = mon_image.createGraphics();
        
        graphic.setPaint(Color.white);
        graphic.fillRect(0, 0, width, height);
        
        repaint();
    }
    
    // on redimmensionne // ne fonctionne pas correctement car efface les dessins
    public void redimensionnement(Dimension d){
       	width = (int) d.getWidth();
        height = (int) d.getHeight();
    	
        mon_image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        graphic = mon_image.createGraphics();
        
        graphic.setPaint(Color.white);
        graphic.fillRect(0, 0, width, height);
        graphic.setPaint(Color.black);
    }
    

    public void paintComponent(Graphics g) {
       Graphics2D drawable = (Graphics2D) g;
        
        // image définitive
        if(state == DrawStates.Final || state == DrawStates.Start){
            // On reccupere quelques infos
            int width = getSize().width;
            int height = getSize().height;

            if (mon_image == null) {
                    mon_image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
                    graphic = mon_image.createGraphics();
                    graphic.setPaint(Color.white);
                    graphic.fillRect(0, 0, width, height);
                    graphic.setPaint(Color.black);
            }
            drawable.drawImage(mon_image, 0, 0, null);
        }
        
        // preview d'une forme --> une copie de l'image définitive  
        if(state == DrawStates.Preview){
            BufferedImage copieimage = mon_image;
            
            // on dessine 
            graphic.setPaint(Color.black);
        
            if(type == DrawTypes.Ligne){
                drawable.drawLine(origin.x, origin.y, destination.x, destination.y);
            }

            if(type == DrawTypes.Cercle){
                drawable.drawOval(origin.x, origin.y, destination.x, destination.y);
            }

            if(type == DrawTypes.Rectangle){
                drawable.drawRect(origin.x, origin.y, destination.x, destination.y);
            }
            
            drawable.drawImage(copieimage, 0, 0, null);
        }
    }


/*
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *//*
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
